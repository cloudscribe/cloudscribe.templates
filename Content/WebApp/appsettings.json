{
    //#if (!AllStorage)
    //#if (!NoDb)
    "ConnectionStrings": {
        //#if (SQLite)
        "SQLiteDbName": "appdata.db",
        //#endif
        //#if (MSSQL)
        "EntityFrameworkConnection": "Server=(localdb)\\mssqllocaldb;Database=WebApp-0353CAB0-205A-4FCD-9626-1282ECF47059;Trusted_Connection=True;MultipleActiveResultSets=true",
        //#endif
        //#if (MySql)
        "EntityFrameworkConnection": "Server=localhost;Database=yourdbname;Uid=yourdbuser;Pwd=yourdbpassword;Charset=utf8;",
        //#endif
        //#if (pgsql)
        "EntityFrameworkConnection": "Server=yourserver;Port=5432;User Id=youruser;Password=yourpassword;Database=yourdbname;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=20;",
        //#endif

        //#if (QueryTool)
        //QueryTool should use a different connection string than the main app for security reasons (possibly readonly and no DDL commands)
        //#if (SQLite)
        "QueryToolConnectionString": "Data Source=appdata.db;Pooling=false;Mode=ReadWrite"
        //#endif
        //#if (MSSQL)
        "QueryToolConnectionString": "Server=(localdb)\\mssqllocaldb;Database=WebApp-0353CAB0-205A-4FCD-9626-1282ECF47059;Trusted_Connection=True;MultipleActiveResultSets=true"
        //#endif
        //#if (MySql)
        "QueryToolConnectionString": "Server=localhost;Database=yourdbname;Uid=yourdbuser;Pwd=yourdbpassword;Charset=utf8;"
        //#endif
        //#if (pgsql)
        "QueryToolConnectionString": "Server=yourserver;Port=5432;User Id=youruser;Password=yourpassword;Database=yourdbname;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=20;"
        //#endif
        //#endif
    },

    //#endif
    //#endif
    //#if (AllStorage)
    "DevOptions": {
        "DbPlatform": "nodb", // nodb or efcore (defaults to nodb if not specified)
        "EFProvider": "mssql" // sqlite, mssql, mysql, pgsql (defaults to mssql if not specified and DbPlatform is efcore)
    },
    "ConnectionStrings": {
        //EFCore SQLite
        "SQLiteDbName": "appdata.db",
        //EFCore MSSQL
        "EntityFrameworkConnection": "Server=(localdb)\\mssqllocaldb;Database=WebApp-0353CAB0-205A-4FCD-9626-1282ECF47059;Trusted_Connection=True;MultipleActiveResultSets=true",
        //EFCore MySql
        "MySqlEntityFrameworkConnection": "Server=localhost;Database=yourdbname;Uid=yourdbuser;Pwd=yourdbpassword;Charset=utf8;",
        //EFCore pgsql
        "PostgreSqlEntityFrameworkConnection": "Server=yourserver;Port=5432;User Id=youruser;Password=yourpassword;Database=yourdbname;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=20;",
    //#if (QueryTool)
        //QueryTool should use a different connection string than the main app for security reasons (possibly readonly and no DDL commands)
        "QueryToolConnectionString": "Data Source=appdata.db;Pooling=false;Mode=ReadWrite"  //or one of the above
    //#endif
    },
    //#endif

    "AppSettings": {
        "UseSsl": false,
        "HttpsPort": 443,
        //#if (IdentityServer)
        "DisableIdentityServer": false,
        "IdServerSigningCertPath": "",
        "IdServerSigningCertPassword": "",
        //#endif

        // auto-expire authentication:
        // "MaximumInactivityInMinutes": "20",

        "UseAzureBlobForDataProtection": false,
        "DataProtectionBlobStorageConnectionString": ""
    },


    "MultiTenantOptions": {
        "Mode": "MULTITENANT-MODE",
        "UseRelatedSitesMode": "false",
        "RelatedSiteId": "00000000-0000-0000-0000-000000000000",
        "RelatedSiteAliasId": "",
        "SiteUploadFilesRootFolderName": "siteuploadfiles",
        "RootUserCanSignInToTenants": "false",
        "RootSiteId": "00000000-0000-0000-0000-000000000000"
    },
    //#if (Paywall)
    "SendRemindersBackgroundTaskOptions": {
        "CronSchedule": "30 9 * * *",
        "TaskSleepTimeInMilliseconds": 3000
    },
    "RoleRemovalBackgroundTaskOptions": {
        "CronSchedule": "30 23 * * *",
        "TaskSleepTimeInMilliseconds": 3000
    },

    //#endif

    //#if (DynamicPolicy)
    "PolicyManagementOptions": {
        "AutoCreateMissingPolicies": true,
        "AutoPolicyAllowedRoleNamesCsv": "Administrators",
        "ShowRequireAuthenticatedUserOption": true,
        "ShowRequiredUserNameOption": true,
        "ShowAuthenticationSchemeOptions": false,
        "ShowClaimRequirementOptions": true,
        "PolicyNamesToConfigureAsAllowAnonymous": [
            "BlogViewPolicy",
            "ForumViewPolicy"
        ],
        "PolicyNamesToConfigureAsAnyAuthenticatedUser": [
            "ForumPostPolicy"
        ]
    },
    //#endif

    //#if (IncludeStripeIntegration)
    "StripeSettingsConfig": {
        "Settings": [
            {
                "TenantId": "*",
                "UseProductionApi": false,
                "ProductionPublicKey": "",
                "ProductionSecretKey": "",
                "ProductionWebHookSecret": "",
                "SandboxPublicKey": "",
                "SandboxSecretKey": "",
                "SandboxWebHookSecret": "",
                "CurrencyCode": "USD"
            }
        ]
    },
    //#endif

    //#if (KvpCustomRegistration)
    "ProfilePropertySetContainer": {
        "UserListingViewName": "index_kvp",
        "PropertySets": [
            {
                "TenantId": "*",
                "Properties": []
            }
        ]
    },
    //#endif

    "SmtpOptions": {
        "Server": "",
        "Port": "25",
        "User": "",
        "Password": "",
        "UseSsl": "false",
        "RequiresAuthentication": "false",
        "DefaultEmailFromAddress": "",
        "DefaultEmailFromAlias": ""
    },
    "SendGridOptions": {
        "ApiKey": "",
        "DefaultEmailFromAddress": "",
        "DefaultEmailFromAlias": ""
    },
    "MailgunOptions": {
        "ApiKey": "",
        "EndpointUrl": "",
        "DefaultEmailFromAddress": "",
        "DefaultEmailFromAlias": ""
    },
    "ElasticEmailOptions": {
        "ApiKey": "",
        "DefaultEmailFromAddress": "",
        "DefaultEmailFromAlias": "",
        "EndpointUrl": "https://api.elasticemail.com/v2/email/send"
    },
    //#if (ContactForm)
    "ContactFormSettings": {
        "Id": "default",
        "NotificationSubject": "Contact Form Submission",
        "NotificationEmailCsv": "",
        "CopySubmitterEmailOnSubmission": false
    },
    "SmtpMessageProcessorOptions": {
        "NotificationTextViewName": "EmailTemplates/ContactFormTextEmail",
        "NotificationHtmlViewName": "EmailTemplates/ContactFormHtmlEmail",
        "SubmitterNotificationTextViewName": "EmailTemplates/ContactFormSubmitterTextEmail",
        "SubmitterNotificationHtmlViewName": "EmailTemplates/ContactFormSubmitterHtmlEmail"
    },
    "RecaptchaKeys": {
        "PublicKey": "",
        "PrivateKey": "",
        "Invisible": true
    },
    //#endif

    //#if(IncludeEmailQueue)
    "EmailQueueBackgroundTaskOptions": {
        "TaskFrequencyInMilliseconds": "300000"
    },
    //#endif

    "SiteConfigOptions": {
        "DefaultTheme": "superhero",
        "FirstSiteTheme": "custom1",
        "RolesThatCannotBeDeleted": ""
    },
    "UIOptions": {
        "AllowDeleteChildSites": "false"
    },
    "CoreThemeConfig": {
        "DefaultTheme": "default",
        "ThemeSettings": [
            {
                "ThemeName": "default",
                "CoreIconSetId": "fontawesome5x",
                "AdminSideNavExpanded": true,
                "EnableHeaderFooterEditingInSiteSettings": true
            }
        ]
    },
    "CoreIconConfig": {
        "DefaultSetId": "fontawesome5x",
        "IconSets": [
            {
                "SetId": "fontawesome5x",
                "Email": "fas fa-at",
                "Username": "far fa-arrow-alt-circle-right",
                "Password": "fas fa-lock",
                "FirstName": "far fa-user",
                "LastName": "far fa-user",
                "DateOfBirth": "far fa-calendar-alt",
                "Facebook": "fab fa-facebook-square",
                "Google": "fab fa-google",
                "Twitter": "fab fa-twitter-square",
                "Microsoft": "fab fa-windows",
                "OpenIDConnect": "fas fa-arrow-alt-circle-right"
            }
        ]
    },

    //#if (SimpleContentConfig != 'z')
    //#if (SimpleContentConfig == 'a' || SimpleContentConfig == 'b')
    // enable developer tools if you want to add javascript and css to pages
    "PageEditOptions": {
        "AlwaysShowDeveloperLink": false,
        "DeveloperAllowedRole": "Administrators",
        "ShowDisableEditorOption": true,
        "AllowDeleteDefaultPage": false,
        "HideUnpublishButton": false
    },
    //#endif
    "BlogEditOptions": {
        "ForceLowerCaseCategories": false,
        "AllowMarkdown": true,
        "HideUnpublishButton": false
    },
    "ContentLocalizationOptions": {
        "UseCultureRoutesAndProjects": false
    },

    "ContentSettingsUIConfig": {
        //#if (CommentSystem)
        "ShowCommentSettings": false,
        //#endif
        //#if (SimpleContentConfig != 'a')
        "ShowBlogMenuOptions": false,
        "ShowBlogSettings": true,
        "ShowPageSettings": true,
        //#endif
        "ShowDefaultContentType": false
    },


    "SimpleContentThemeConfig": {
        "ThemeSettings": [
            {
                "ThemeName": "default",
                "IconSetId": "fontawesome5x",
                "NumberOfRecentPostsToShow": 3,
                "NumberOfFeaturedPostsToShow": 3
            }
        ]
    },

    "SimpleContentIconConfig": {
        "DefaultSetId": "fontawesome5x",
        "IconSets": [

            {
                "SetId": "fontawesome5x",
                "Previous": "fas fa-backward",
                "Next": "fas fa-forward",
                "Comments": "fas fa-comment",
                "Tags": "fas fa-hashtag",
                "Archives": "far fa-calendar-alt",
                "About": "far fa-star",
                "BadRequest": "fas fa-ban",
                "UnAuthorized": "fas fa-ban",
                "Forbidden": "fas fa-exclamation-circle",
                "PageNotFound": "fas fa-exclamation-circle",
                "Error": "fas fa-exclamation-circle",
                "Home": "fas fa-home",
                "ShowEditToolbar": "fas fa-pencil-alt",
                "NewItem": "fas fa-plus",
                "PageTree": "fas fa-tree",
                "SortAlpha": "fas fa-sort-alpha-down",
                "Edit": "fas fa-pencil-alt",
                "View": "fas fa-eye",
                "Delete": "far fa-trash-alt",
                "Unpublish": "far fa-eye-slash",
                "RelatedPosts": "far fa-hand-point-right"

            }
        ]
    },
    "ContentTemplateSettings": {
        "GalleryOptions": {
            "NewImagePath": "/media/gallery",
            "ResizeMaxWidth": 1500,
            "ResizeMaxHeight": 1500,
            "KeepOriginalSizeImages": false,
            "EnableBrowseServer": true,
            "EnableCropping": true,
            "CropAreaWidth": 690,
            "CropAreaHeight": 517,
            "PlaceholderImageUrl": "/cr/images/690x517-placeholder.png"
        },
        "LinkListOptions": {
            "NewImagePath": "/media/linklists",
            "ResizeMaxWidth": 500,
            "ResizeMaxHeight": 500,
            "ImageRenderMaxHeight": 150,
            "KeepOriginalSizeImages": false,
            "EnableBrowseServer": true,
            "EnableCropping": true,
            "CropAreaWidth": 350,
            "CropAreaHeight": 250,
            "PlaceholderImageUrl": "/cr/images/350x250-placeholder.png"
        },
        "ColumnTemplateOptions": {
            "NewImagePath": "/media/images",
            "ResizeMaxWidth": 1500,
            "ResizeMaxHeight": 1500,
            "KeepOriginalSizeImages": false,
            "EnableBrowseServer": true,
            "EnableCropping": true,
            "CropAreaWidth": 690,
            "CropAreaHeight": 517,
            "PlaceholderImageUrl": "/cr/images/690x517-placeholder.png"
        },
        "ImageWithContentOptions": {
            "NewImagePath": "/media/images",
            "ResizeMaxWidth": 1500,
            "ResizeMaxHeight": 1500,
            "KeepOriginalSizeImages": false,
            "EnableBrowseServer": true,
            "EnableCropping": true,
            "CropAreaWidth": 690,
            "CropAreaHeight": 517,
            "PlaceholderImageUrl": "/cr/images/690x517-placeholder.png"
        }

    },

    //#endif
    "AutomaticUploadOptions": {
        "WebSizeImageMaxWidth": 690,
        "WebSizeImageMaxHeight": 690,
        "ThumbnailImageMaxWidth": 300,
        "ThumbnailImageMaxHeight": 300,
        "ResizeMaxAllowedWidth": 2560,
        "ResizeMaxAllowedHeight": 2560
    },
    "GoogleAnalyticsOptions": {
        "TrackUserId": "true",
        "UserIdDimensionIndex": "1",
        "RegisteredUserDimensionIndex": "2",
        "LoginRegisterSourceDimenstionIndex": "3",
        "RegisterSuccessMetricIndex": "1",
        "RegisterFailMetricIndex": "2",
        "RegisterSubmitMetricIndex": "3",
        "LoginSuccessMetricIndex": "4",
        "LoginFailMetricIndex": "5",
        "LoginSubmitMetricIndex": "6",
        "LoginRegisterEventCategory": "Login and Registration",
        "LoginSuccessEventAction": "Login Success",
        "LoginFailEventAction": "Login Fail",
        "LoginSubmitEventAction": "Login Submit",
        "RegisterSuccessEventAction": "Register Success",
        "RegisterFailEventAction": "Register Fail",
        "RegisterSubmitEventAction": "Register Submit"
    },

    "GoogleAnalyticsGA4Options": {
        "TrackUserId": "true",
        "EnableDebugMode": "false",
        "LoginSuccessEventName": "login",
        "LoginFailEventName": "login_fail",
        "LoginSubmitEventName": "login_submit",
        "LoginRequires2FaEventName": "login_2fa",
        "LoginLockoutEventName": "login_lockout",
        "RegisterSuccessEventName": "sign_up",
        "RegisterFailEventName": "sign_up_fail",
        "RegisterSubmitEventName": "sign_up_submit",
        "LogoutEventName": "logout",
        "SearchEventName": "search"
    },

    //#if(Logging)
    "DbLoggerConfig": {
        "DevLogLevel": "Debug",
        "ProductionLogLevel": "Warning",
        "ExcludedNamesSpaces": [
            "SaasKit.Multitenancy"
        ],
        "BelowWarningExcludedNamesSpaces": [
            "Microsoft.AspNetCore.StaticFiles",
            "Microsoft.AspNetCore.Hosting",
            "Microsoft.AspNetCore.Authorization",
            "Microsoft.AspNetCore.Mvc.Internal"
        ]
    },
    //#endif

    "Logging": {
        "IncludeScopes": false,
        "Debug": {
            "LogLevel": {
                "Default": "Warning"
            }
        },
        "Console": {
            "LogLevel": {
                "Default": "Warning"
            }
        }
    }
}
